#BlueJ class context
comment0.params=
comment0.target=TwoDimensionalGridGUI()
comment0.text=\r\n\ Constructs\ a\ new\ grid\ and\ initializes\ all\ cells.\r\n
comment1.params=columnsAlive\ rowsAlive\ numberOfCellsSet
comment1.target=TwoDimensionalGridGUI(int[],\ int[],\ int)
comment1.text=\r\n\ Constructs\ a\ new\ grid\ and\ intializes\ all\ cells\ with\ the\ specified\r\n\ living\ cells.\r\n\ \r\n\ @param\ columnsAlive\ the\ column\ coordinates\ of\ the\ living\ cell\r\n\ @param\ rowsAlive\ the\ row\ coordinates\ of\ the\ living\ cell\r\n\ @param\ numberOfCellsSet\ the\ number\ of\ pairs\ of\ coordinates\ given.\ Pairs\ should\ have\ the\ same\ index\r\n
comment10.params=row\ column
comment10.target=void\ checkNeighbours(int,\ int)
comment10.text=\r\n\ Checks\ the\ surrounding\ cells\ of\ a\ specified\ cell.\r\n\ \r\n\ @param\ row\ the\ row\ of\ the\ cell\ being\ checked\r\n\ @param\ column\ the\ column\ of\ the\ cell\ being\ checked\r\n
comment11.params=counter\ row\ column
comment11.target=void\ decisionOnCellState(int,\ int,\ int)
comment11.text=\r\n\ Applies\ the\ rules\ of\ the\ game\ of\ life.\r\n\ \r\n\ @param\ counter\ the\ amount\ of\ living\ cells\ surrounding\ the\ current\ cell\r\n\ @param\ row\ the\ row\ of\ the\ cell\ being\ checked\r\n\ @param\ column\ the\ column\ of\ the\ cell\ being\ checked\r\n
comment12.params=
comment12.target=void\ killAllCells()
comment12.text=\r\n\ Kills\ all\ cells.\r\n
comment13.params=row\ column
comment13.target=void\ updateCell(int,\ int)
comment13.text=\r\n\ Updates\ the\ status\ of\ a\ single\ cell.\r\n\ \r\n\ @param\ row\ the\ row\ of\ the\ cell\ being\ checked\r\n\ @param\ column\ the\ column\ of\ the\ cell\ being\ checked\r\n
comment14.params=
comment14.target=void\ updateAllCells()
comment14.text=\r\n\ Updates\ the\ screen\ to\ output\ the\ next\ cycle\ of\ cells.\r\n
comment2.params=screenHeight\ screenWidth\ squareSize
comment2.target=TwoDimensionalGridGUI(int,\ int,\ int)
comment2.text=\r\n\ Constructs\ a\ grid\ with\ an\ amount\ of\ cells\ related\ to\ the\ size\ of\ the\ screen.\r\n\ \r\n\ @param\ screenHeight\ the\ height\ of\ the\ screen\r\n\ @param\ screenWidth\ the\ width\ of\ the\ screen\r\n\ @param\ squareSize\ the\ size\ of\ each\ grid\ representation\r\n
comment3.params=columnsAlive\ rowsAlive\ numberOfPairs\ cellColumns\ cellRows
comment3.target=TwoDimensionalGridGUI(int[],\ int[],\ int,\ int,\ int)
comment3.text=\r\n\ Constructs\ a\ new\ grid\ and\ intializes\ all\ cells\ with\ the\ specified\r\n\ living\ cells.\r\n\ \r\n\ @param\ columnsAlive\ the\ column\ coordinates\ of\ the\ living\ cell\r\n\ @param\ rowsAlive\ the\ row\ coordinates\ of\ the\ living\ cell\r\n\ @param\ numberOfPairs\ the\ number\ of\ row\ and\ column\ pairs\ given\r\n\ @param\ cellRows\ the\ number\ of\ cells\ in\ a\ row\r\n\ @param\ cellColumns\ the\ number\ of\ cells\ in\ a\ column\r\n
comment4.params=row\ column
comment4.target=CellGUI\ getCell(int,\ int)
comment4.text=\r\n\ Returns\ the\ specified\ cell.\r\n\ \r\n\ @param\ column\ the\ column\ location\ of\ the\ specified\ cell\r\n\ @param\ row\ the\ row\ location\ of\ the\ specified\ cell\r\n\ \r\n\ @return\ cellGrid[column][row]\ the\ cell\ as\ specified\ by\ the\ parameters\r\n
comment5.params=
comment5.target=int\ getLowerBound()
comment5.text=\r\n\ Returns\ the\ lower\ bound\ of\ the\ grid.\r\n\ \r\n\ @return\ lowerBound\ the\ lowest\ most\ bound\ of\ this\ grid\r\n
comment6.params=
comment6.target=int\ getRightBound()
comment6.text=\r\n\ Retruns\ the\ right\ bound\ of\ the\ grid.\r\n\ \r\n\ @return\ rightBound\ the\ right\ most\ bound\ of\ this\ grid\r\n
comment7.params=
comment7.target=void\ printCells()
comment7.text=\r\n\ Prints\ all\ the\ cells\ on\ the\ grid\ and\ their\ location\ and\ alive\ status.\r\n
comment8.params=row\ column
comment8.target=void\ checkCellStatus(int,\ int)
comment8.text=\r\n\ Checks\ the\ status\ of\ a\ single\ cell.\r\n\ \r\n\ @param\ row\ the\ row\ of\ the\ cell\ being\ checked\r\n\ @param\ column\ the\ column\ of\ the\ cell\ being\ checked\r\n
comment9.params=
comment9.target=void\ checkAllCellStatus()
comment9.text=\r\n\ Checks\ the\ status\ of\ the\ cell\ by\ looking\ at\ its\ coordinates\ and\ applying\ the\ appropriate\ test.\r\n
numComments=15
